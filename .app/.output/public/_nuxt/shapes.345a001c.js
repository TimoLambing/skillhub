import{d as S,a7 as z,c as C,r as c,a8 as R,a9 as U,o as i,a as f,D as a,h as t,$ as k,f as A,t as _,M as g,b as u,V as D,W as M,e as m,l as P,a5 as j,C as v}from"./entry.896af9cc.js";const E=["for"],T={class:"nui-input-file-outer"},W=["for"],q={class:"text-xs"},G={class:"nui-input-file-text"},H=["id"],J={key:0,class:"nui-input-file-placeload"},K=S({inheritAttrs:!1,__name:"BaseInputFile",props:{modelValue:{default:void 0},id:{default:void 0},shape:{default:void 0},label:{default:void 0},placeholder:{default:"Choose file"},icon:{default:void 0},colorFocus:{type:Boolean},loading:{type:Boolean},size:{default:"md"},contrast:{default:"white"},error:{type:[String,Boolean],default:!1},textValue:{type:Function,default:s=>s?.item?.length?s?.item.length===1?s.item(0)?.name??"Invalid file selected":`${s?.item?.length??0} files selected`:"No file chosen"},classes:{default:()=>({})}},emits:["update:modelValue"],setup(s,{expose:r,emit:d}){const e=s,p=d,b=z(),l=C(()=>e.shape??b.nui.defaultShapes?.input),o={straight:"",rounded:"nui-input-rounded",smooth:"nui-input-smooth",curved:"nui-input-curved",full:"nui-input-full"},n={sm:"nui-input-sm",md:"nui-input-md",lg:"nui-input-lg"},$={white:"nui-input-white","white-contrast":"nui-input-white-contrast"},y=c(),x=R(e,"modelValue",p,{passive:!0}),w=C(()=>e.textValue?.(x.value));r({el:y});const V=U(()=>e.id);return(h,B)=>{const F=P,N=j;return i(),f("div",{class:a(["nui-input-file-regular",[$[e.contrast],n[e.size],t(l)&&o[t(l)],e.error&&!e.loading&&"nui-input-file-error",e.loading&&"nui-input-file-loading",e.icon&&"nui-has-icon",e.classes.wrapper]])},["label"in h.$slots||e.label?(i(),f("label",{key:0,class:a(["nui-input-file-label",e.classes.label]),for:t(V)},[k(h.$slots,"label",{},()=>[A(_(e.label),1)])],10,E)):g("",!0),u("div",T,[u("label",{tabindex:"0",class:a(["nui-input-file-inner",[e.colorFocus&&"nui-color-focus",e.classes.input]]),for:t(V)},[u("div",{class:a(["nui-input-file-addon",e.classes.text])},[u("span",q,_(e.placeholder),1),k(h.$slots,"icon",{},()=>[e.icon?(i(),D(F,{key:0,name:e.icon,class:a(e.classes.icon)},null,8,["name","class"])):g("",!0)])],2),u("div",G,_(t(w)),1),u("input",M({id:t(V),ref_key:"inputRef",ref:y,type:"file"},h.$attrs,{class:"hidden",onChange:B[0]||(B[0]=I=>x.value=I.target.files)}),null,16,H)],10,W),e.loading?(i(),f("div",J,[m(N,{class:"nui-placeload"})])):g("",!0),e.error&&typeof e.error=="string"?(i(),f("span",{key:1,class:a(["nui-input-file-error-text",e.classes?.error])},_(e.error),3)):g("",!0)])],2)}}}),O={class:"grid gap-6 md:max-w-lg md:grid-cols-2"},X=S({__name:"shapes",setup(s){const r=c(null),d=c(null),e=c(null),p=c(null);return(b,l)=>{const o=K;return i(),f("div",O,[m(o,{modelValue:t(r),"onUpdate:modelValue":l[0]||(l[0]=n=>v(r)?r.value=n:null),shape:"straight",label:"Straight input"},null,8,["modelValue"]),m(o,{modelValue:t(d),"onUpdate:modelValue":l[1]||(l[1]=n=>v(d)?d.value=n:null),shape:"rounded",label:"Rounded input"},null,8,["modelValue"]),m(o,{modelValue:t(e),"onUpdate:modelValue":l[2]||(l[2]=n=>v(e)?e.value=n:null),shape:"curved",label:"Curved input"},null,8,["modelValue"]),m(o,{modelValue:t(p),"onUpdate:modelValue":l[3]||(l[3]=n=>v(p)?p.value=n:null),shape:"full",label:"Full input"},null,8,["modelValue"])])}}});export{X as default};
