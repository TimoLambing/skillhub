// ROLLUP_NO_REPLACE 
 const _4_formValidation = "{\"parsed\":{\"_path\":\"/documentation/guides/form-validation\",\"_dir\":\"guides\",\"_draft\":false,\"_partial\":false,\"_locale\":\"\",\"title\":\"Form validation\",\"description\":\"Form validation is a way to check if the data entered by the user is valid. Tairo provides a simple way to validate forms using the `veevalidate` and `zod` libraries.\",\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"doc-component-demo\",\"props\":{\"demo\":\"#examples/tairo/validation.vue\",\"title\":\"Form validation\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Form validation is a way to check if the data entered by the user is valid. Tairo provides a simple way to validate forms using the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"vee-validate\"}]},{\"type\":\"text\",\"value\":\" and \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"zod\"}]},{\"type\":\"text\",\"value\":\" libraries.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Vee-validate provides vue components and composable to control fields and form whereas zod is a library to define schemas. In the example below, we show how both work with Tairo with a simple user profile form.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note that you can totally remove those dependencies, Tairo and Shuriken components won't be affected.\"}]}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[]}},\"_type\":\"markdown\",\"_id\":\"content:documentation:50.guides:4.form-validation.md\",\"_source\":\"content\",\"_file\":\"documentation/50.guides/4.form-validation.md\",\"_extension\":\"md\"},\"hash\":\"fcqFuR6KjT\"}";

export { _4_formValidation as default };
//# sourceMappingURL=4.form-validation.mjs.map
