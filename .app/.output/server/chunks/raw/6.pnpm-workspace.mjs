// ROLLUP_NO_REPLACE 
 const _6_pnpmWorkspace = "{\"parsed\":{\"_path\":\"/documentation/guides/pnpm-workspace\",\"_dir\":\"guides\",\"_draft\":false,\"_partial\":false,\"_locale\":\"\",\"title\":\"Pnpm workspace\",\"description\":\"\",\"body\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tag\":\"doc-component-demo\",\"props\":{\"title\":\"Introduction\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Pnpm workspace is a powerful tool for managing multiple packages in a single repository. It can help you keep your dependencies in sync and reduce the time and disk space required for package installation. If you're working on a project that uses pnpm workspace, you can take advantage of this feature to manage your packages more efficiently.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Another feature of pnpm workspace is hoisting, which allows you to install dependencies at the root level instead of in each workspace. This can further reduce the disk space and installation time required for your packages.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Overall, pnpm workspace can be a powerful tool for managing multiple packages in a single repository. It can help you keep your dependencies in sync and reduce the time and disk space required for package installation. If you're new to pnpm workspace, it's worth taking the time to learn how to use it effectively.\"}]},{\"type\":\"element\",\"tag\":\"hr\",\"props\":{\"id\":\"\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Useful resources:\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://pnpm.io/workspaces\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"Read more about workspace on pnpm.io\"}]}]}]}]},{\"type\":\"element\",\"tag\":\"doc-component-demo\",\"props\":{\"title\":\"Workspace structure\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Pnpm use a \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pnpm-workspace.yaml\"}]},{\"type\":\"text\",\"value\":\" file to define the workspace structure. This file is located at the root of the project and contains a list of workspace directories.\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-yaml\"],\"code\":\"packages:\\n  - .app\\n  - .demo\\n  - layers/*\\n\",\"filename\":\"pnpm-workspace.yaml\",\"language\":\"yaml\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"packages:\\n  - .app\\n  - .demo\\n  - layers/*\\n\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"All folders listed in this file that contains a \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"package.json\"}]},{\"type\":\"text\",\"value\":\" file will be considered in the workspace. You can use wildcards to automatically include all folders that match a pattern, like with the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"layers/*\"}]},{\"type\":\"text\",\"value\":\" entry above.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"As an example, you could create a new folder for your backend and add it to the workspace:\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-yaml\"],\"code\":\"packages:\\n  - .app\\n  - .backend # replace unused .demo with .backend\\n  - layers/*\\n\",\"filename\":\"pnpm-workspace.yaml\",\"language\":\"yaml\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"packages:\\n  - .app\\n  - .backend # replace unused .demo with .backend\\n  - layers/*\\n\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Then create a \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"package.json\"}]},{\"type\":\"text\",\"value\":\" file in the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\".backend\"}]},{\"type\":\"text\",\"value\":\" folder:\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-json\"],\"code\":\"{\\n  \\\"name\\\": \\\"my-backend\\\",\\n  \\\"private\\\": true,\\n  \\\"version\\\": \\\"1.0.0\\\"\\n}\\n\",\"filename\":\".backend/package.json\",\"language\":\"json\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"{\\n  \\\"name\\\": \\\"my-backend\\\",\\n  \\\"private\\\": true,\\n  \\\"version\\\": \\\"1.0.0\\\"\\n}\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"doc-component-demo\",\"props\":{\"title\":\"Install dependencies in the right place\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"By default, if you don't specify a package filter, pnpm will install dependencies in the root \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"package.json\"}]},{\"type\":\"text\",\"value\":\" file. This is not what we want when using pnpm workspace.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Instead we want to install it in the package that contains our layer. For example, if we want to install a dependency in the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\".app\"}]},{\"type\":\"text\",\"value\":\" layer, we should use the following command:\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-bash\"],\"code\":\"pnpm --filter tairo-quickstarter install --dev my-dependency\\n\",\"language\":\"bash\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"pnpm --filter tairo-quickstarter install --dev my-dependency\\n\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"This will find packages in the workspace that has the name \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"tairo-quickstarter\"}]},{\"type\":\"text\",\"value\":\" in thier \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"package.json\"}]},{\"type\":\"text\",\"value\":\" and install the dependency in it (here it matches \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\".app/package.json\"}]},{\"type\":\"text\",\"value\":\" name).\"}]},{\"type\":\"element\",\"tag\":\"doc-message\",\"props\":{\"icon\":\"ph:info\",\"type\":\"muted\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"We could use \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"my-backend\"}]},{\"type\":\"text\",\"value\":\" from the previous example instead of \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"tairo-quickstarter\"}]},{\"type\":\"text\",\"value\":\" to install the dependency in the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\".backend\"}]},{\"type\":\"text\",\"value\":\" pacakge.\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Another option is to run \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pnpm install\"}]},{\"type\":\"text\",\"value\":\" in the layer directory. This will install dependencies in the layer directory instead of the root directory.\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-bash\"],\"code\":\"cd .app\\npnpm install --dev my-dependency\\n\",\"language\":\"bash\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"cd .app\\npnpm install --dev my-dependency\\n\"}]}]}]},{\"type\":\"element\",\"tag\":\"doc-component-demo\",\"props\":{\"title\":\"Upgrading dependencies in a workspace\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"If you want to update a dependency in a workspace, you should use the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"update\"}]},{\"type\":\"text\",\"value\":\" command with the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"--recursive\"}]},{\"type\":\"text\",\"value\":\" flag in order to update the dependency in all layers.\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-bash\"],\"code\":\"pnpm update --recursive --latest --interactive\\n\",\"language\":\"bash\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"pnpm update --recursive --latest --interactive\\n\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Select dependencies you want to update and press enter.\"}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Once the update is done, you need to remove all \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"node_modules\"}]},{\"type\":\"text\",\"value\":\" folder using \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pnpm clean:all\"}]},{\"type\":\"text\",\"value\":\", delete the \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pnpm-lock.yaml\"}]},{\"type\":\"text\",\"value\":\" file and run \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"pnpm install\"}]},{\"type\":\"text\",\"value\":\" again.\"}]},{\"type\":\"element\",\"tag\":\"doc-message\",\"props\":{\"icon\":\"ph:info\",\"type\":\"muted\"},\"children\":[{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Note that it may be possible that we have patched some dependencies, updating them may or may not include our fixes. If you encounter any issue, please report it on our \"},{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://cssninja/faq/support\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"Support Portal\"}]},{\"type\":\"text\",\"value\":\".\"}]}]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Alternatively, you can also use \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"find\"}]},{\"type\":\"text\",\"value\":\" unix command to find all \"},{\"type\":\"element\",\"tag\":\"code\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"node_modules\"}]},{\"type\":\"text\",\"value\":\" directory in the workspace and delete them:\"}]},{\"type\":\"element\",\"tag\":\"pre\",\"props\":{\"className\":[\"language-bash\"],\"code\":\"find . -maxdepth 4 -name node_modules -type d -prune -exec rm -rf {} \\\\;\\n\",\"language\":\"bash\",\"meta\":\"\"},\"children\":[{\"type\":\"element\",\"tag\":\"code\",\"props\":{\"__ignoreMap\":\"\"},\"children\":[{\"type\":\"text\",\"value\":\"find . -maxdepth 4 -name node_modules -type d -prune -exec rm -rf {} \\\\;\\n\"}]}]},{\"type\":\"element\",\"tag\":\"hr\",\"props\":{\"id\":\"_1\"},\"children\":[]},{\"type\":\"element\",\"tag\":\"p\",\"props\":{},\"children\":[{\"type\":\"text\",\"value\":\"Useful resources:\"}]},{\"type\":\"element\",\"tag\":\"ul\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"li\",\"props\":{},\"children\":[{\"type\":\"element\",\"tag\":\"a\",\"props\":{\"href\":\"https://pnpm.io/cli/update\",\"rel\":[\"nofollow\"]},\"children\":[{\"type\":\"text\",\"value\":\"Read update guide on pnpm.io\"}]}]}]}]}],\"toc\":{\"title\":\"\",\"searchDepth\":2,\"depth\":2,\"links\":[]}},\"_type\":\"markdown\",\"_id\":\"content:documentation:50.guides:6.pnpm-workspace.md\",\"_source\":\"content\",\"_file\":\"documentation/50.guides/6.pnpm-workspace.md\",\"_extension\":\"md\"},\"hash\":\"ABt4I7UCmt\"}";

export { _6_pnpmWorkspace as default };
//# sourceMappingURL=6.pnpm-workspace.mjs.map
