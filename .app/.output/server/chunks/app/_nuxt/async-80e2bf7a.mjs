const async = "<template>\n  <div class=\"md:max-w-lg\">\n    <BaseTreeSelect\n      :children=\"getAsyncTree\"\n      treeline\n      :icons=\"{\n        open: 'lucide:chevron-up',\n        closed: 'lucide:chevron-down',\n        pending: 'svg-spinners:270-ring-with-bg',\n      }\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst getAsyncTree = async () => {\n  await new Promise((resolve) => setTimeout(resolve, 3000))\n\n  return [\n    {\n      item: 'Item 1',\n      open: true,\n      children: async () => {\n        await new Promise((resolve) => setTimeout(resolve, 8000))\n\n        return Array.from(\n          {\n            length: 100,\n          },\n          (x, i) => ({\n            item: `Item 1.${i}`,\n            children: async () => {\n              await new Promise((resolve) => setTimeout(resolve, 2000))\n\n              return Array.from(\n                {\n                  length: 10,\n                },\n                (x, j) => ({\n                  item: `Item 1.${i}.${j}`,\n                }),\n              )\n            },\n          }),\n        )\n      },\n    },\n    {\n      item: 'Item 2',\n      children: async () => {\n        await new Promise((resolve) => setTimeout(resolve, 8000))\n\n        return Array.from(\n          {\n            length: 100,\n          },\n          (x, i) => ({\n            item: `Item 2.${i}`,\n            children: async () => {\n              await new Promise((resolve) => setTimeout(resolve, 2000))\n\n              return Array.from(\n                {\n                  length: 10,\n                },\n                (x, j) => ({\n                  item: `Item 2.${i}.${j}`,\n                }),\n              )\n            },\n          }),\n        )\n      },\n    },\n  ]\n}\n<\/script>\n";

export { async as default };
//# sourceMappingURL=async-80e2bf7a.mjs.map
